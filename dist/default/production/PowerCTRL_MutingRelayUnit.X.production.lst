

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sat Apr 14 07:35:00 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F675
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x5E,2
    15  0000                     
    16                           ; Version 1.43
    17                           ; Generated 25/07/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC12F675 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0019                     	;# 
    64  001E                     	;# 
    65  001F                     	;# 
    66  0081                     	;# 
    67  0085                     	;# 
    68  008C                     	;# 
    69  008E                     	;# 
    70  0090                     	;# 
    71  0095                     	;# 
    72  0096                     	;# 
    73  0096                     	;# 
    74  0099                     	;# 
    75  009A                     	;# 
    76  009A                     	;# 
    77  009B                     	;# 
    78  009C                     	;# 
    79  009D                     	;# 
    80  009E                     	;# 
    81  009F                     	;# 
    82  000E                     _TMR1	set	14
    83  0005                     _GPIO	set	5
    84  0019                     _CMCON	set	25
    85  0010                     _T1CON	set	16
    86  0028                     _GP0	set	40
    87  002D                     _GP5	set	45
    88  002C                     _GP4	set	44
    89  005F                     _GIE	set	95
    90  005E                     _PEIE	set	94
    91  0060                     _TMR1IF	set	96
    92  0080                     _TMR1ON	set	128
    93  0096                     _IOC	set	150
    94  0095                     _WPU	set	149
    95  009F                     _ANSEL	set	159
    96  0085                     _TRISIO	set	133
    97  0460                     _TMR1IE	set	1120
    98                           
    99                           ; #config settings
   100  0000                     
   101                           	psect	cinit
   102  0010                     start_initialization:	
   103  0010                     __initialization:	
   104                           
   105                           ; Clear objects allocated to BANK0
   106  0010  1283               	bcf	3,5	;RP0=0, select bank0
   107  0011  01A8               	clrf	__pbssBANK0& (0+127)
   108  0012  01A9               	clrf	(__pbssBANK0+1)& (0+127)
   109  0013  01AA               	clrf	(__pbssBANK0+2)& (0+127)
   110  0014  01AB               	clrf	(__pbssBANK0+3)& (0+127)
   111  0015                     end_of_initialization:	
   112                           ;End of C runtime variable initialization code
   113                           
   114  0015                     __end_of__initialization:	
   115  0015  0183               	clrf	3
   116  0016  2817               	ljmp	_main	;jump to C main() function
   117                           
   118                           	psect	bssBANK0
   119  0028                     __pbssBANK0:	
   120  0028                     Swich_CountHIGH@count:	
   121  0028                     	ds	2
   122  002A                     _sw_time:	
   123  002A                     	ds	2
   124                           
   125                           	psect	cstackCOMMON
   126  0000                     __pcstackCOMMON:	
   127  0000                     ??_Basic_Init:	
   128  0000                     ??_Switch_ReadTime:	
   129                           ; 1 bytes @ 0x0
   130                           
   131  0000                     ??_Swich_CountHIGH:	
   132                           ; 1 bytes @ 0x0
   133                           
   134  0000                     ??_main:	
   135                           ; 1 bytes @ 0x0
   136                           
   137                           
   138                           	psect	cstackBANK0
   139  0020                     __pcstackBANK0:	
   140                           ; 1 bytes @ 0x0
   141                           
   142  0020                     ?_Basic_Init:	
   143  0020                     ?_Swich_CountHIGH:	
   144                           ; 1 bytes @ 0x0
   145                           
   146  0020                     ?_main:	
   147                           ; 1 bytes @ 0x0
   148                           
   149  0020                     ?_Handler:	
   150                           ; 1 bytes @ 0x0
   151                           
   152  0020                     ??_Handler:	
   153                           ; 1 bytes @ 0x0
   154                           
   155                           
   156                           ; 1 bytes @ 0x0
   157  0020                     	ds	4
   158  0024                     ?_Switch_ReadTime:	
   159                           
   160                           ; 2 bytes @ 0x4
   161  0024                     	ds	2
   162  0026                     Switch_ReadTime@store_time:	
   163                           
   164                           ; 2 bytes @ 0x6
   165  0026                     	ds	2
   166                           
   167                           	psect	maintext
   168  0017                     __pmaintext:	
   169 ;;
   170 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   171 ;;
   172 ;; *************** function _main *****************
   173 ;; Defined at:
   174 ;;		line 15 in file "main.c"
   175 ;; Parameters:    Size  Location     Type
   176 ;;		None
   177 ;; Auto vars:     Size  Location     Type
   178 ;;		None
   179 ;; Return value:  Size  Location     Type
   180 ;;                  1    wreg      void 
   181 ;; Registers used:
   182 ;;		wreg, status,2, status,0, pclath, cstack
   183 ;; Tracked objects:
   184 ;;		On entry : B00/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMMON   BANK0
   188 ;;      Params:         0       0
   189 ;;      Locals:         0       0
   190 ;;      Temps:          0       0
   191 ;;      Totals:         0       0
   192 ;;Total ram usage:        0 bytes
   193 ;; Hardware stack levels required when called:    3
   194 ;; This function calls:
   195 ;;		_Basic_Init
   196 ;;		_Switch_ReadTime
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           
   203                           ;psect for function _main
   204  0017                     _main:	
   205                           
   206                           ;main.c: 17: Basic_Init();
   207                           
   208                           ;incstack = 0
   209                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   210  0017  2062               	fcall	_Basic_Init
   211                           
   212                           ;main.c: 19: T1CON = 0x00;
   213  0018  1283               	bcf	3,5	;RP0=0, select bank0
   214  0019  0190               	clrf	16	;volatile
   215                           
   216                           ;main.c: 21: TMR1 = 0xFFFF-1000;
   217  001A  30FC               	movlw	252
   218  001B  008F               	movwf	15	;volatile
   219  001C  3017               	movlw	23
   220  001D  008E               	movwf	14	;volatile
   221                           
   222                           ;main.c: 23: TMR1ON = 1;
   223  001E  1410               	bsf	16,0	;volatile
   224                           
   225                           ;main.c: 25: TMR1IE = 1;
   226  001F  1683               	bsf	3,5	;RP0=1, select bank1
   227  0020  140C               	bsf	12,0	;volatile
   228                           
   229                           ;main.c: 26: TMR1IF = 0;
   230  0021  1283               	bcf	3,5	;RP0=0, select bank0
   231  0022  100C               	bcf	12,0	;volatile
   232                           
   233                           ;main.c: 28: PEIE = 1;
   234  0023  170B               	bsf	11,6	;volatile
   235                           
   236                           ;main.c: 29: GIE = 1;
   237  0024  178B               	bsf	11,7	;volatile
   238  0025                     l626:	
   239                           ;main.c: 31: while(1)
   240                           
   241                           
   242                           ;main.c: 32: {
   243                           ;main.c: 33: if(Switch_ReadTime()>1000)
   244  0025  206F               	fcall	_Switch_ReadTime
   245  0026  3003               	movlw	3
   246  0027  1283               	bcf	3,5	;RP0=0, select bank0
   247  0028  0225               	subwf	?_Switch_ReadTime+1,w
   248  0029  30E9               	movlw	233
   249  002A  1903               	skipnz
   250  002B  0224               	subwf	?_Switch_ReadTime,w
   251  002C  1C03               	skipc
   252  002D  2825               	goto	l626
   253                           
   254                           ;main.c: 34: {
   255                           ;main.c: 35: GP4 = GP5 ^= 1;
   256  002E  3020               	movlw	32
   257  002F  0685               	xorwf	5,f
   258  0030  1E85               	btfss	5,5
   259  0031  2835               	goto	u90
   260  0032  1283               	bcf	3,5	;RP0=0, select bank0
   261  0033  1605               	bsf	5,4	;volatile
   262  0034  2825               	goto	l626
   263  0035                     u90:	
   264  0035  1283               	bcf	3,5	;RP0=0, select bank0
   265  0036  1205               	bcf	5,4	;volatile
   266  0037  2825               	goto	l626
   267  0038                     __end_of_main:	
   268                           
   269                           	psect	text1
   270  006F                     __ptext1:	
   271 ;; *************** function _Switch_ReadTime *****************
   272 ;; Defined at:
   273 ;;		line 78 in file "main.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;  store_time      2    6[BANK0 ] unsigned int 
   278 ;; Return value:  Size  Location     Type
   279 ;;                  2    4[BANK0 ] unsigned int 
   280 ;; Registers used:
   281 ;;		wreg, status,2
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0
   287 ;;      Params:         0       2
   288 ;;      Locals:         0       2
   289 ;;      Temps:          0       0
   290 ;;      Totals:         0       4
   291 ;;Total ram usage:        4 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; Hardware stack levels required when called:    2
   294 ;; This function calls:
   295 ;;		Nothing
   296 ;; This function is called by:
   297 ;;		_main
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           
   302                           ;psect for function _Switch_ReadTime
   303  006F                     _Switch_ReadTime:	
   304                           
   305                           ;main.c: 80: uint16_t store_time = sw_time;
   306                           
   307                           ;incstack = 0
   308                           ; Regs used in _Switch_ReadTime: [wreg+status,2]
   309  006F  1283               	bcf	3,5	;RP0=0, select bank0
   310  0070  082B               	movf	_sw_time+1,w
   311  0071  00A7               	movwf	Switch_ReadTime@store_time+1
   312  0072  082A               	movf	_sw_time,w
   313  0073  00A6               	movwf	Switch_ReadTime@store_time
   314                           
   315                           ;main.c: 82: sw_time = 0;
   316  0074  01AA               	clrf	_sw_time
   317  0075  01AB               	clrf	_sw_time+1
   318                           
   319                           ;main.c: 84: return store_time;
   320  0076  0827               	movf	Switch_ReadTime@store_time+1,w
   321  0077  00A5               	movwf	?_Switch_ReadTime+1
   322  0078  0826               	movf	Switch_ReadTime@store_time,w
   323  0079  00A4               	movwf	?_Switch_ReadTime
   324  007A  0008               	return
   325  007B                     __end_of_Switch_ReadTime:	
   326                           
   327                           	psect	text2
   328  0062                     __ptext2:	
   329 ;; *************** function _Basic_Init *****************
   330 ;; Defined at:
   331 ;;		line 40 in file "main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMMON   BANK0
   345 ;;      Params:         0       0
   346 ;;      Locals:         0       0
   347 ;;      Temps:          0       0
   348 ;;      Totals:         0       0
   349 ;;Total ram usage:        0 bytes
   350 ;; Hardware stack levels used:    1
   351 ;; Hardware stack levels required when called:    2
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           
   360                           ;psect for function _Basic_Init
   361  0062                     _Basic_Init:	
   362                           
   363                           ;main.c: 42: TRISIO = 0x01;
   364                           
   365                           ;incstack = 0
   366                           ; Regs used in _Basic_Init: [wreg+status,2]
   367  0062  3001               	movlw	1
   368  0063  1683               	bsf	3,5	;RP0=1, select bank1
   369  0064  0085               	movwf	5	;volatile
   370                           
   371                           ;main.c: 43: CMCON = 0x07;
   372  0065  3007               	movlw	7
   373  0066  1283               	bcf	3,5	;RP0=0, select bank0
   374  0067  0099               	movwf	25	;volatile
   375                           
   376                           ;main.c: 44: ANSEL = 0x00;
   377  0068  1683               	bsf	3,5	;RP0=1, select bank1
   378  0069  019F               	clrf	31	;volatile
   379                           
   380                           ;main.c: 45: WPU = 0x00;
   381  006A  0195               	clrf	21	;volatile
   382                           
   383                           ;main.c: 46: IOC = 0x00;
   384  006B  0196               	clrf	22	;volatile
   385                           
   386                           ;main.c: 48: GPIO = 0x00;
   387  006C  1283               	bcf	3,5	;RP0=0, select bank0
   388  006D  0185               	clrf	5	;volatile
   389  006E  0008               	return
   390  006F                     __end_of_Basic_Init:	
   391                           
   392                           	psect	text3
   393  0038                     __ptext3:	
   394 ;; *************** function _Handler *****************
   395 ;; Defined at:
   396 ;;		line 51 in file "main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, status,2, status,0, pclath, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0
   410 ;;      Params:         0       0
   411 ;;      Locals:         0       0
   412 ;;      Temps:          0       4
   413 ;;      Totals:         0       4
   414 ;;Total ram usage:        4 bytes
   415 ;; Hardware stack levels used:    1
   416 ;; Hardware stack levels required when called:    1
   417 ;; This function calls:
   418 ;;		_Swich_CountHIGH
   419 ;; This function is called by:
   420 ;;		Interrupt level 1
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           
   425                           ;psect for function _Handler
   426  0038                     _Handler:	
   427                           
   428                           ;main.c: 53: if(TMR1IF&&TMR1IE)
   429  0038  1C0C               	btfss	12,0	;volatile
   430  0039  2845               	goto	i1l58
   431  003A  1683               	bsf	3,5	;RP0=1, select bank1
   432  003B  1C0C               	btfss	12,0	;volatile
   433  003C  2845               	goto	i1l58
   434                           
   435                           ;main.c: 54: {
   436                           ;main.c: 55: TMR1 = 0xFFFF-1000;
   437  003D  30FC               	movlw	252
   438  003E  1283               	bcf	3,5	;RP0=0, select bank0
   439  003F  008F               	movwf	15	;volatile
   440  0040  3017               	movlw	23
   441  0041  008E               	movwf	14	;volatile
   442                           
   443                           ;main.c: 57: Swich_CountHIGH();
   444  0042  2051               	fcall	_Swich_CountHIGH
   445                           
   446                           ;main.c: 59: TMR1IF = 0;
   447  0043  1283               	bcf	3,5	;RP0=0, select bank0
   448  0044  100C               	bcf	12,0	;volatile
   449  0045                     i1l58:	
   450  0045  1283               	bcf	3,5	;RP0=0, select bank0
   451  0046  0823               	movf	??_Handler+3,w
   452  0047  00DF               	movwf	95
   453  0048  0822               	movf	??_Handler+2,w
   454  0049  008A               	movwf	10
   455  004A  0821               	movf	??_Handler+1,w
   456  004B  0084               	movwf	4
   457  004C  0E20               	swapf	??_Handler^0,w
   458  004D  0083               	movwf	3
   459  004E  0EDE               	swapf	94,f
   460  004F  0E5E               	swapf	94,w
   461  0050  0009               	retfie
   462  0051                     __end_of_Handler:	
   463                           
   464                           	psect	intentry
   465  0004                     __pintentry:	
   466                           ;incstack = 0
   467                           ; Regs used in _Handler: [wreg+status,2+status,0+pclath+cstack]
   468                           
   469  0004                     interrupt_function:	
   470  005E                     saved_w	set	btemp
   471  0004  00DE               	movwf	btemp
   472  0005  0E03               	swapf	3,w
   473  0006  1283               	bcf	3,5	;RP0=0, select bank0
   474  0007  00A0               	movwf	??_Handler
   475  0008  0804               	movf	4,w
   476  0009  00A1               	movwf	??_Handler+1
   477  000A  080A               	movf	10,w
   478  000B  00A2               	movwf	??_Handler+2
   479  000C  085F               	movf	btemp+1,w
   480  000D  00A3               	movwf	??_Handler+3
   481  000E  2838               	ljmp	_Handler
   482                           
   483                           	psect	text4
   484  0051                     __ptext4:	
   485 ;; *************** function _Swich_CountHIGH *****************
   486 ;; Defined at:
   487 ;;		line 63 in file "main.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, status,2
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMMON   BANK0
   501 ;;      Params:         0       0
   502 ;;      Locals:         0       0
   503 ;;      Temps:          0       0
   504 ;;      Totals:         0       0
   505 ;;Total ram usage:        0 bytes
   506 ;; Hardware stack levels used:    1
   507 ;; This function calls:
   508 ;;		Nothing
   509 ;; This function is called by:
   510 ;;		_Handler
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _Swich_CountHIGH
   516  0051                     _Swich_CountHIGH:	
   517                           
   518                           ;main.c: 65: static uint16_t count = 0;
   519                           ;main.c: 67: if(!GP0)
   520                           
   521                           ;incstack = 0
   522                           ; Regs used in _Swich_CountHIGH: [wreg+status,2]
   523  0051  1283               	bcf	3,5	;RP0=0, select bank0
   524  0052  1805               	btfsc	5,0	;volatile
   525  0053  285B               	goto	i1l606
   526                           
   527                           ;main.c: 68: {
   528                           ;main.c: 69: count++;
   529  0054  3001               	movlw	1
   530  0055  07A8               	addwf	Swich_CountHIGH@count,f
   531  0056  1803               	skipnc
   532  0057  0AA9               	incf	Swich_CountHIGH@count+1,f
   533  0058  3000               	movlw	0
   534  0059  07A9               	addwf	Swich_CountHIGH@count+1,f
   535                           
   536                           ;main.c: 70: }
   537  005A  0008               	return
   538  005B                     i1l606:	
   539                           
   540                           ;main.c: 71: else
   541                           ;main.c: 72: {
   542                           ;main.c: 73: sw_time = count;
   543  005B  0829               	movf	Swich_CountHIGH@count+1,w
   544  005C  00AB               	movwf	_sw_time+1
   545  005D  0828               	movf	Swich_CountHIGH@count,w
   546  005E  00AA               	movwf	_sw_time
   547                           
   548                           ;main.c: 74: count = 0;
   549  005F  01A8               	clrf	Swich_CountHIGH@count
   550  0060  01A9               	clrf	Swich_CountHIGH@count+1
   551  0061  0008               	return
   552  0062                     __end_of_Swich_CountHIGH:	
   553  005E                     btemp	set	94	;btemp
   554  005E                     wtemp0	set	94


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      8      12

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Switch_ReadTime

Critical Paths under _Handler in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      23
                         _Basic_Init
                    _Switch_ReadTime
 ---------------------------------------------------------------------------------
 (1) _Switch_ReadTime                                      4     2      2      23
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Handler                                              4     4      0       0
                                              0 BANK0      4     4      0
                    _Swich_CountHIGH
 ---------------------------------------------------------------------------------
 (3) _Swich_CountHIGH                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Switch_ReadTime

 _Handler (ROOT)
   _Swich_CountHIGH

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      8       C       4       19.4%
ABS                  0      0       C       5        0.0%
DATA                 0      0       C       6        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sat Apr 14 07:35:00 2018

              __CFG_CP$OFF 0000                         u90 0035                        l626 0025  
                      _GP0 0028                        _GP4 002C                        _GP5 002D  
                      _GIE 005F                        _IOC 0096               __CFG_CPD$OFF 0000  
                      _WPU 0095                        fsr0 0004                 _Basic_Init 0062  
 __size_of_Switch_ReadTime 000C                       _GPIO 0005                       _PEIE 005E  
                     i1l58 0045                       _TMR1 000E                       _main 0017  
                     btemp 005E                       start 000F            __end_of_Handler 0051  
            __CFG_MCLRE$ON 0000           ?_Swich_CountHIGH 0020                      ?_main 0020  
            __CFG_WDTE$OFF 0000                      _CMCON 0019                      _ANSEL 009F  
                    _T1CON 0010                      i1l606 005B             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 005E  
          __initialization 0010               __end_of_main 0038                     ??_main 0000  
              ?_Basic_Init 0020                     _TMR1IE 0460                     _TMR1IF 0060  
                ??_Handler 0020                     _TMR1ON 0080                     _TRISIO 0085  
        ??_Switch_ReadTime 0000             __CFG_PWRTE$OFF 0000                     saved_w 005E  
  __end_of__initialization 0015             __pcstackCOMMON 0000        __size_of_Basic_Init 000D  
               __pbssBANK0 0028                 __pmaintext 0017                 __pintentry 0004  
                  _Handler 0038                    __ptext1 006F                    __ptext2 0062  
                  __ptext3 0038                    __ptext4 0051               ??_Basic_Init 0000  
          _Switch_ReadTime 006F   __size_of_Swich_CountHIGH 0011                    _sw_time 002A  
     end_of_initialization 0015         __end_of_Basic_Init 006F    __end_of_Switch_ReadTime 007B  
      start_initialization 0010          ??_Swich_CountHIGH 0000  Switch_ReadTime@store_time 0026  
                ___latbits 0000              __pcstackBANK0 0020                   ?_Handler 0020  
         ?_Switch_ReadTime 0024          interrupt_function 0004       Swich_CountHIGH@count 0028  
         __size_of_Handler 0019            _Swich_CountHIGH 0051              __size_of_main 0021  
                 intlevel1 0000    __end_of_Swich_CountHIGH 0062          __CFG_FOSC$INTRCIO 0000  
